# - Try to find  SIMGEAR
# Once done, this will define
#
#  SIMGEAR_FOUND - system has scicoslab 
#  SIMGEAR_INCLUDE_DIRS - the scicoslab include directories
#  SIMGEAR_LIBRARIES - libraries to link to

include(LibFindMacros)
include(MacroCommonPaths)

MacroCommonPaths(SIMGEAR)

# Include dir
find_path(SIMGEAR_INCLUDE_DIR
	NAMES simgear/version.h
	PATHS  ${COMMON_INCLUDE_PATHS_SIMGEAR}
)

# Finally the libraries
find_library(SGBUCKET_LIBRARY
	NAMES sgbucket
	PATHS  ${COMMON_LIBRARY_PATHS_SIMGEAR}
)
find_library(SGDEBUG_LIBRARY
	NAMES sgdebug
	PATHS  ${COMMON_LIBRARY_PATHS_SIMGEAR}
)
find_library(SGENVIRONMENT_LIBRARY
	NAMES sgenvironment
	PATHS  ${COMMON_LIBRARY_PATHS_SIMGEAR}
)
find_library(SGEPHEM_LIBRARY
	NAMES sgephem
	PATHS  ${COMMON_LIBRARY_PATHS_SIMGEAR}
)
find_library(SGIO_LIBRARY
	NAMES sgio
	PATHS  ${COMMON_LIBRARY_PATHS_SIMGEAR}
)
find_library(SGMAGVAR_LIBRARY
	NAMES sgmagvar
	PATHS  ${COMMON_LIBRARY_PATHS_SIMGEAR}
)
find_library(SGMATERIAL_LIBRARY
	NAMES sgmaterial
	PATHS  ${COMMON_LIBRARY_PATHS_SIMGEAR}
)
find_library(SGMATH_LIBRARY
	NAMES sgmath
	PATHS  ${COMMON_LIBRARY_PATHS_SIMGEAR}
)
find_library(SGMISC_LIBRARY
	NAMES sgmisc
	PATHS  ${COMMON_LIBRARY_PATHS_SIMGEAR}
)
find_library(SGMODEL_LIBRARY
	NAMES sgmodel
	PATHS  ${COMMON_LIBRARY_PATHS_SIMGEAR}
)
find_library(SGNASAL_LIBRARY
	NAMES sgnasal
	PATHS  ${COMMON_LIBRARY_PATHS_SIMGEAR}
)
find_library(SGPROPS_LIBRARY
	NAMES sgprops
	PATHS  ${COMMON_LIBRARY_PATHS_SIMGEAR}
)
find_library(SGROUTE_LIBRARY
	NAMES sgroute
	PATHS  ${COMMON_LIBRARY_PATHS_SIMGEAR}
)
find_library(SGSCREEN_LIBRARY
	NAMES sgscreen
	PATHS  ${COMMON_LIBRARY_PATHS_SIMGEAR}
)
find_library(SGSERIAL_LIBRARY
	NAMES sgserial
	PATHS  ${COMMON_LIBRARY_PATHS_SIMGEAR}
)
find_library(SGSKEY_LIBRARY
	NAMES sgsky
	PATHS  ${COMMON_LIBRARY_PATHS_SIMGEAR}
)
find_library(SGSOUND_LIBRARY
	NAMES sgsound
	PATHS  ${COMMON_LIBRARY_PATHS_SIMGEAR}
)
find_library(SGSTRUCTURE_LIBRARY
	NAMES sgstructure
	PATHS  ${COMMON_LIBRARY_PATHS_SIMGEAR}
)
find_library(SGTGDB_LIBRARY
	NAMES sgtgdb
	PATHS  ${COMMON_LIBRARY_PATHS_SIMGEAR}
)
find_library(SGTHREADS_LIBRARY
	NAMES sgthreads
	PATHS  ${COMMON_LIBRARY_PATHS_SIMGEAR}
)
find_library(SGTIMING_LIBRARY
	NAMES sgtiming
	PATHS  ${COMMON_LIBRARY_PATHS_SIMGEAR}
)
find_library(SGUTIL_LIBRARY
	NAMES sgutil
	PATHS  ${COMMON_LIBRARY_PATHS_SIMGEAR}
)
find_library(SGXML_LIBRARY
	NAMES sgxml
	PATHS  ${COMMON_LIBRARY_PATHS_SIMGEAR}
)

# Set the include dir variables and the libraries and let libfind_process do the rest.
# NOTE: Singular variables for this library, plural for libraries this this lib depends on.
set(SIMGEAR_PROCESS_INCLUDES SIMGEAR_INCLUDE_DIR)
set(SIMGEAR_PROCESS_LIBS
    SGBUCKET_LIBRARY
    SGDEBUG_LIBRARY
    SGENVIRONMENT_LIBRARY
    SGEPHEM_LIBRARY
    SGIO_LIBRARY
    SGMAGVAR_LIBRARY
    SGMATERIAL_LIBRARY
    SGMATH_LIBRARY
    SGMISC_LIBRARY
    SGMODEL_LIBRARY
    SGNASAL_LIBRARY
    SGPROPS_LIBRARY
    SGROUTE_LIBRARY
    SGSCREEN_LIBRARY
    SGSERIAL_LIBRARY
    SGSKEY_LIBRARY
    SGSOUND_LIBRARY
    SGSTRUCTURE_LIBRARY
    SGTGDB_LIBRARY
    SGTHREADS_LIBRARY
    SGTIMING_LIBRARY
    SGUTIL_LIBRARY
    SGXML_LIBRARY
    )
libfind_process(SIMGEAR)

macro(build_simgear TAG EP_BASE_DIR CMAKE_ARGS)
    ExternalProject_Add(simgear
        GIT_REPOSITORY "git clone git://gitorious.org/fg/simgear.git"
        GIT_TAG ${TAG}
        UPDATE_COMMAND ""
        INSTALL_DIR ${EP_BASE_DIR}/${CMAKE_INSTALL_PREFIX}
        CMAKE_ARGS ${CMAKE_ARGS}
        INSTALL_COMMAND make DESTDIR=${EP_BASE_DIR} install
    )
endmacro()
